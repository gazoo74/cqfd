.\"
.\"  Copyright (c) 2015-2017  Savoir-faire Linux, Inc.
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, version 3.
.\"
.\" This program is distributed in the hope that it will be useful, but
.\" WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program. If not, see <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.
.TH "CQFD" "1" "2017-01-17" "C.Q.F.D." "C.Q.F.D. Manual"
.
.SH NAME
cqfd - a tool to wrap commands in controlled Docker containers
.
.SH SYNOPSIS
.B cqfd
.RI [OPTIONS]\ [COMMAND]\ [ARGUMENTS]
.
.SH DESCRIPTION
.B cqfd(1)
provides a quick and convenient way to run commands in the current directory,
but within a Docker container defined in a per-project config file.
.
.P
This becomes useful when building an application designed for another Linux
system, e.g. building a RHEL7 app when your workstation runs on Ubuntu 16.04.
.
.SH COMMAND
.TP
.B init
Initialize project build container
.
.TP
.B run
Run argument(s) inside build container
.
.TP
.B release
Run argument(s) and release software
.
.TP
.B help
Show this help text
.
.SH OPTIONS
.TP
.B \-f\ <file>
Use file as config file (default .cqfdrc)
.
.TP
.B \-b\ <flavor_name>
Target a specific build flavor.
.
.TP
.B \-h or \-\-help
Display this help message.
.
.SH EXAMPLES
.P
.B Regular builds
.
.P
To build your project from the configured build environment with the default
build command as configured in
.B .cqfdrc(5)
, use:
.
.P
.in +4n
.nf
$ cqfd
.fi
.in
.
.P
Alternatively, you may want to specify a custom build command to be executed
from inside the build container.
.
.P
.in +4n
.nf
$ cqfd run make clean
$ cqfd run "make linux-dirclean && make foobar-dirclean"
.fi
.in
.
.P
When
.B cqfd(1)
is running, the current directory is mounted by Docker as a volume. As a result,
all the build artefacts generated inside the container are still accessible in
this directory after the container has been stopped and removed.
.
.P
.B Release
.
.P
The
.I release
command behaves exactly like
.I run
, but creates a release tarball for your project additionally. The release files
(as specified in your
.B .cqfdrc(5)
) will be included inside the release archive.
.
.P
.in +4n
.nf
$ cqfd release
.fi
.in
.
.P
The resulting release file is then called unique job name, or the string
`local-build' when run from outside Jenkins, and BUILD_ID is a Jenkins-generated
unique and date-based string, or the current date.
.
.P
.B Flavors
.
.P
You may also want to build a specific build
.I flavor
, for a regular build or a release. To do so use the
.I -b
option, for example:
.
.P
.in +4n
.nf
$ cqfd -b debug run
.fi
.in
.
.P
When building with a
.I flavor
as when building a regular project, the run option can be omitted.
.
.P
.B Other command-line options
.P
In some conditions you may want to use an alternate config file with
.B cqfd(1)
. This
is what the
.I -f
option is for:
.
.P
.in +4n
.nf
$ cqfd -f .cqfdrc.test
.fi
.in
.
.SH FILES
.TP
.B .cqfdrc
Project information config file (See
.B cqfdrc(5)
).
.
.SH ENVIRONMENT
.IP CQFD_EXTRA_VOLUMES
A space-separated list of additional volume mappings to be configured inside the
started container. Format is the same as (and passed to) docker-run’s
.IR -v
option.
.
.IP CQFD_EXTRA_HOSTS
A space-separated list of additional host mappings to be configured inside the
started container. Format is the same as (and passed to) docker-run’s
.IR --add-host
option.
.
.IP CQFD_EXTRA_ENV
A space-separated list of additional environment variables to be passed to the
started container. Format is the same as (and passed to) docker-run’s
.IR -e
option.
.
.SH BUGS
Report bugs at
.RB < https://github.com/savoirfairelinux/cqfd/issues >
.
.SH AUTHOR
Originally written by Mathieu Audat
.RB < mathieu.audat@savoirfairelinux.com >
.
.SH COPYRIGHT
Copyright (C) 2015-2017 Savoir-faire Linux, Inc.
.
.P
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3.
.
.SH SEE ALSO
.BR cqfdrc(5),
.BR docker(1),
.BR Dockerfile(5)
.
.SH COLOPHON
This page is part of
.B C.Q.F.D.
project.
.
.P
.B C.Q.F.D.
stands for `Ce qu'il fallait Dockeriser', french for `what needed to be
dockerized'.
